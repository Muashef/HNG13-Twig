{% extends "base.html.twig" %}

{% block title %}Dashboard - Ticket Management{% endblock %}

{% block content %}
<main class="min-h-screen bg-gradient-to-b from-slate-950 to-slate-900 py-12">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
       
        <div class="mb-12">
            <h1 class="text-4xl font-bold mb-2">Dashboard</h1>
            <p class="text-slate-400">Welcome back, <span id="userName" class="text-cyan-400 font-semibold">User</span></p>
        </div>

        <div class="grid md:grid-cols-4 gap-6 mb-12">
            <div class="bg-slate-800 rounded-lg p-6 border border-slate-700">
                <p class="text-slate-400 text-sm mb-2">Total Tickets</p>
                <p class="text-3xl font-bold" id="totalTickets">0</p>
            </div>
            <div class="bg-slate-800 rounded-lg p-6 border border-slate-700">
                <p class="text-slate-400 text-sm mb-2">Open</p>
                <p class="text-3xl font-bold text-green-400" id="openTickets">0</p>
            </div>
            <div class="bg-slate-800 rounded-lg p-6 border border-slate-700">
                <p class="text-slate-400 text-sm mb-2">In Progress</p>
                <p class="text-3xl font-bold text-blue-400" id="inProgressTickets">0</p>
            </div>
            <div class="bg-slate-800 rounded-lg p-6 border border-slate-700">
                <p class="text-slate-400 text-sm mb-2">Closed</p>
                <p class="text-3xl font-bold text-red-400" id="closedTickets">0</p>
            </div>
        </div>

        <div class="bg-slate-800 rounded-lg border border-slate-700 p-8 mb-12">
            <h2 class="text-2xl font-bold mb-6">Create New Ticket</h2>
            <form id="ticketForm" class="space-y-4">
                <div class="grid md:grid-cols-2 gap-4">
                    <div>
                        <label class="block text-sm font-medium mb-2">Title</label>
                        <input 
                            type="text" 
                            id="title" 
                            name="title"
                            class="w-full px-4 py-2 bg-slate-700 border border-slate-600 rounded-lg focus:outline-none focus:border-cyan-500 transition"
                            placeholder="Ticket title"
                            required
                        >
                    </div>
                    <div>
                        <label class="block text-sm font-medium mb-2">Priority</label>
                        <select 
                            id="priority" 
                            name="priority"
                            class="w-full px-4 py-2 bg-slate-700 border border-slate-600 rounded-lg focus:outline-none focus:border-cyan-500 transition"
                        >
                            <option value="low">Low</option>
                            <option value="medium" selected>Medium</option>
                            <option value="high">High</option>
                        </select>
                    </div>
                </div>
                <div>
                    <label class="block text-sm font-medium mb-2">Description</label>
                    <textarea 
                        id="description" 
                        name="description"
                        class="w-full px-4 py-2 bg-slate-700 border border-slate-600 rounded-lg focus:outline-none focus:border-cyan-500 transition"
                        placeholder="Ticket description"
                        rows="4"
                    ></textarea>
                </div>
                <button 
                    type="submit"
                    class="px-6 py-2 bg-gradient-to-r from-cyan-500 to-blue-600 hover:from-cyan-600 hover:to-blue-700 rounded-lg font-semibold transition"
                >
                    Create Ticket
                </button>
            </form>
        </div>

        <div class="mb-6 flex gap-2 flex-wrap">
            <button class="filter-btn px-4 py-2 bg-slate-700 hover:bg-cyan-600 rounded-lg transition" data-filter="all">All</button>
            <button class="filter-btn px-4 py-2 bg-slate-700 hover:bg-green-600 rounded-lg transition" data-filter="open">Open</button>
            <button class="filter-btn px-4 py-2 bg-slate-700 hover:bg-blue-600 rounded-lg transition" data-filter="in-progress">In Progress</button>
            <button class="filter-btn px-4 py-2 bg-slate-700 hover:bg-red-600 rounded-lg transition" data-filter="closed">Closed</button>
        </div>

        <div id="ticketsList" class="space-y-4">
            <!-- Tickets will be rendered here -->
        </div>
    </div>

    <!-- Edit Ticket Modal -->
<div id="editModal" class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center hidden">
    <div class="bg-slate-800 rounded-lg p-6 w-full max-w-md relative">
        <button onclick="closeEditModal()" class="absolute top-2 right-2 text-slate-400 hover:text-white text-xl">&times;</button>
        <h2 class="text-2xl font-bold mb-4">Edit Ticket</h2>
        <form id="editTicketForm" class="space-y-4">
            <div>
                <label class="block text-sm font-medium mb-1">Title</label>
                <input type="text" id="editTitle" class="w-full px-3 py-2 bg-slate-700 border border-slate-600 rounded focus:outline-none focus:border-cyan-500" required>
            </div>
            <div>
                <label class="block text-sm font-medium mb-1">Description</label>
                <textarea id="editDescription" rows="3" class="w-full px-3 py-2 bg-slate-700 border border-slate-600 rounded focus:outline-none focus:border-cyan-500"></textarea>
            </div>
            <div>
                <label class="block text-sm font-medium mb-1">Priority</label>
                <select id="editPriority" class="w-full px-3 py-2 bg-slate-700 border border-slate-600 rounded focus:outline-none focus:border-cyan-500">
                    <option value="low">Low</option>
                    <option value="medium">Medium</option>
                    <option value="high">High</option>
                </select>
            </div>
            <button type="submit" class="px-6 py-2 bg-cyan-600 hover:bg-cyan-700 rounded font-semibold transition">Save Changes</button>
        </form>
    </div>
</div>
</main>

<script>
let currentFilter = 'all';

function getTickets() {
    const tickets = localStorage.getItem('tickets');
    return tickets ? JSON.parse(tickets) : [];
}

function getCurrentUser() {
    const user = localStorage.getItem('currentUser');
    return user ? JSON.parse(user) : { name: 'User' }; // fallback
}

function initDashboard() {
    const user = getCurrentUser();
    if (!user) {
        window.location.href = '/twig/public/login';
        return;
    }

    document.getElementById('userName').textContent = user.name;
    updateStats();
    renderTickets();
}

function updateStats() {
    const tickets = getTickets();
    document.getElementById('totalTickets').textContent = tickets.length;
    document.getElementById('openTickets').textContent = tickets.filter(t => t.status === 'open').length;
    document.getElementById('inProgressTickets').textContent = tickets.filter(t => t.status === 'in-progress').length;
    document.getElementById('closedTickets').textContent = tickets.filter(t => t.status === 'closed').length;
}

function renderTickets() {
    const tickets = getTickets();
    const filtered = currentFilter === 'all' ? tickets : tickets.filter(t => t.status === currentFilter);
    const container = document.getElementById('ticketsList');

    if (filtered.length === 0) {
        container.innerHTML = '<p class="text-slate-400 text-center py-8">No tickets found</p>';
        return;
    }

    container.innerHTML = filtered.map(ticket => `
        <div class="bg-slate-800 rounded-lg border border-slate-700 p-6">
            <div class="flex justify-between items-start mb-4">
                <div>
                    <h3 class="text-xl font-bold">${ticket.title}</h3>
                    <p class="text-slate-400 text-sm">${ticket.description}</p>
                </div>
                <div class="flex gap-2">
                    <button onclick="editTicket(${ticket.id})" class="px-3 py-1 bg-blue-600 hover:bg-blue-700 rounded text-sm transition">Edit</button>
                    <button onclick="deleteTicket(${ticket.id})" class="px-3 py-1 bg-red-600 hover:bg-red-700 rounded text-sm transition">Delete</button>
                </div>
            </div>
            <div class="flex justify-between items-center">
                <div class="flex gap-4">
                    <span class="text-sm">Priority: <span class="font-semibold capitalize">${ticket.priority}</span></span>
                    <span class="text-sm">Status: 
                        <select onchange="updateTicketStatus(${ticket.id}, this.value)" class="bg-slate-700 border border-slate-600 rounded px-2 py-1">
                            <option value="open" ${ticket.status === 'open' ? 'selected' : ''}>Open</option>
                            <option value="in-progress" ${ticket.status === 'in-progress' ? 'selected' : ''}>In Progress</option>
                            <option value="closed" ${ticket.status === 'closed' ? 'selected' : ''}>Closed</option>
                        </select>
                    </span>
                </div>
                <span class="text-xs text-slate-500">${new Date(ticket.createdAt).toLocaleDateString()}</span>
            </div>
        </div>
    `).join('');
}

function deleteTicket(id) {
    if (confirm('Are you sure you want to delete this ticket?')) {
        const tickets = getTickets().filter(t => t.id !== id);
        localStorage.setItem('tickets', JSON.stringify(tickets));
        updateStats();
        renderTickets();
    }
}

function updateTicketStatus(id, status) {
    const tickets = getTickets();
    const ticket = tickets.find(t => t.id === id);
    if (ticket) {
        ticket.status = status;
        localStorage.setItem('tickets', JSON.stringify(tickets));
        updateStats();
        renderTickets();
    }
}



document.getElementById('ticketForm').addEventListener('submit', function(e) {
    e.preventDefault();

    const title = document.getElementById('title').value.trim();
    const description = document.getElementById('description').value.trim();
    const priority = document.getElementById('priority').value;

    if (!title) {
        alert('Please enter a title');
        return;
    }

    const newTicket = {
        id: Date.now(),
        title,
        description,
        priority,
        status: 'open',
        createdAt: new Date().toISOString()
    };

    const tickets = getTickets();
    tickets.push(newTicket);
    localStorage.setItem('tickets', JSON.stringify(tickets));

    document.getElementById('ticketForm').reset();
    updateStats();
    renderTickets();
});

const filterColors = {
    all: 'bg-cyan-600',
    open: 'bg-green-600',
    'in-progress': 'bg-blue-600',
    closed: 'bg-red-600'
};

document.querySelectorAll('.filter-btn').forEach(btn => {
    btn.addEventListener('click', function() {
        document.querySelectorAll('.filter-btn').forEach(b => {
            b.classList.remove('bg-cyan-600','bg-green-600','bg-blue-600','bg-red-600');
        });
        currentFilter = this.dataset.filter;
        this.classList.add(filterColors[currentFilter]);
        renderTickets();
    });
});

document.querySelector('[data-filter="all"]').classList.add('bg-cyan-600');

let editingTicketId = null;

function editTicket(id) {
    const ticket = getTickets().find(t => t.id === id);
    if (!ticket) return;

    editingTicketId = id;
    document.getElementById('editTitle').value = ticket.title;
    document.getElementById('editDescription').value = ticket.description;
    document.getElementById('editPriority').value = ticket.priority;

    document.getElementById('editModal').classList.remove('hidden');
}

function closeEditModal() {
    editingTicketId = null;
    document.getElementById('editModal').classList.add('hidden');
}

document.getElementById('editTicketForm').addEventListener('submit', function(e) {
    e.preventDefault();
    if (!editingTicketId) return;

    const tickets = getTickets();
    const ticket = tickets.find(t => t.id === editingTicketId);
    if (!ticket) return;

    ticket.title = document.getElementById('editTitle').value.trim();
    ticket.description = document.getElementById('editDescription').value.trim();
    ticket.priority = document.getElementById('editPriority').value;

    localStorage.setItem('tickets', JSON.stringify(tickets));
    updateStats();
    renderTickets();
    closeEditModal();
});

// function editTicket(id) {
//     alert('Edit ticket feature coming soon! Ticket ID: ' + id);
// }

initDashboard();
</script>
{% endblock %}
